import { GraphQLResolveInfo } from 'graphql'
import { getAttributes } from '../ast'
import {{modelName}}Model from '../../model/{{modelName}}.model'
import { GraphqlContext } from 'interfaces/graphql/GraphqlContext.interface'

export const resolver = {

  {{modelName}}: {
  },

  Query: {
    {{modelName}}: async (parent, args, context: GraphqlContext, info: GraphQLResolveInfo) => {
      return {{modelName}}Model.findByPk(args.id, { attributes: getAttributes(info, {{modelName}}Model) })
    },
    {{modelName}}s: async (parent, args, context: GraphqlContext, info: GraphQLResolveInfo) => {
      const attributes = getAttributes(info, {{modelName}}Model)
      return {{modelName}}Model.findAll({ attributes }) // TODO Filter
    }
  },

  Mutation: {
    Save{{modelName}}: async (parent, args) => {
      return {{modelName}}Model.create(args.input)
    },

    Delete{{modelName}}: async (parent, { id }) => {
      return {{modelName}}Model.destroy({ where: { id } })
    },

    Update{{modelName}}: async (parent, { id, ...rest }) => {
      return {{modelName}}Model.update(rest, { where: { id } })
    }
  }
}
